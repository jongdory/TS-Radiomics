# Latent Brownian Bridge Diffusion Model Template(Latent Space)
runner: "BBDMRunner"
training:
  n_epochs: 5000
  n_steps: 1500000
  save_interval: 20
  sample_interval: 10
  validation_interval: 10
  accumulate_grad_batches: 4
  use_DDP: True

testing:
  clip_denoised: False
  sample_num: 5

data:
  dataset_name: 'brats'
  dataset_type: 'brats'
  dataset_config:
    dataset_path: "BraTS2021/TrainingData"
    radiomics_path: "radiomics/texture_features.csv"
    image_size: 112
    channels: 1
    to_normal: True
    flip: False
  train:
    batch_size: 1
    shuffle: True
  val:
    batch_size: 1
    shuffle: True
  test:
    batch_size: 1

model:
  model_name: "LBBDM-f2" # part of result path
  model_type: "LBBDM" # specify a module
  latent_before_quant_conv: False
  normalize_latent: True #True
  only_load_latent_mean_std: False
  model_load_path: # model checkpoint path
  optim_sche_load_path: # optimizer scheduler checkpoint path

  EMA:
    use_ema: True
    ema_decay: 0.995
    update_ema_interval: 8 # step
    start_ema_step: 30000

  radiomics_dim: 148
  CondStageParams:
    n_stages: 2
    in_channels: 2
    out_channels: 2

  VQGAN:
    params:
      ckpt_path: 'results/VQGAN/vqgan.pt'
      spatial_dims: 3
      embedding_dim: 2
      num_embeddings: 2048
      in_channels: 1
      out_channels: 1
      num_channels: !!python/tuple # (256, 512)
        - 256
      num_res_channels: 256
      downsample_parameters: !!python/tuple  #((2, 4, 1, 1), (2, 4, 1, 1))
        - !!python/tuple
          - 2
          - 4
          - 1
          - 1
      upsample_parameters: !!python/tuple # ((2, 4, 1, 1, 0), (2, 4, 1, 1, 0))
        - !!python/tuple
          - 2
          - 4
          - 1
          - 1
          - 0
      num_res_layers: 2
      dropout: 0.0

  BB:
    optimizer:
      weight_decay: 0.000
      optimizer: 'Adam'
      lr: 1.e-6
      beta1: 0.9

    lr_scheduler:
      factor: 0.5
      patience: 3000
      threshold: 0.0001
      cooldown: 3000
      min_lr: 5.e-7

    params:
      mt_type: 'linear' # options {'linear', 'sin'}
      objective: 'grad' # options {'grad', 'noise', 'ysubx'}
      loss_type: 'l1' # options {'l1', 'l2'}

      skip_sample: True
      sample_type: 'linear' # options {"linear", "sin"}
      sample_step: 200

      num_timesteps: 1000 # timesteps
      eta: 1.0 # DDIM reverse process eta
      max_var: 1.0 # maximum variance

      UNetParams:
        image_size: 56
        in_channels: 4
        model_channels: 128
        out_channels: 2
        num_res_blocks: 2
        attention_resolutions: !!python/tuple
          - 32
          - 16
          - 8
        channel_mult: !!python/tuple
          - 1
          - 4
          - 8
        conv_resample: True
        dims: 3
        num_heads: 8
        num_head_channels: 64
        use_scale_shift_norm: True
        resblock_updown: True
        use_spatial_transformer: True
        context_dim: 148
        condition_key: "radiomics"